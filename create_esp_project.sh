#!/bin/bash

# ƒê·ªãnh nghƒ©a th∆∞ m·ª•c d·ª± √°n (ƒë√£ c√≥ s·∫µn)
PROJECT_DIR="$HOME/esp/mainproject"

# Danh s√°ch c√°c component c·∫ßn t·∫°o
COMPONENTS=("comm" "buzzer" "mpu6050" "sim4g_gps")

# Ki·ªÉm tra th∆∞ m·ª•c d·ª± √°n ƒë√£ t·ªìn t·∫°i ch∆∞a
if [ ! -d "$PROJECT_DIR" ]; then
    echo "‚ùó Th∆∞ m·ª•c $PROJECT_DIR kh√¥ng t·ªìn t·∫°i! H√£y t·∫°o tr∆∞·ªõc khi ch·∫°y script."
    exit 1
fi

echo "üöÄ ƒêang thi·∫øt l·∫≠p c·∫•u tr√∫c cho d·ª± √°n t·∫°i: $PROJECT_DIR"

# T·∫°o th∆∞ m·ª•c components n·∫øu ch∆∞a c√≥
mkdir -p "$PROJECT_DIR/components"

# T·∫°o c√°c component
for COMPONENT in "${COMPONENTS[@]}"; do
    COMPONENT_DIR="$PROJECT_DIR/components/$COMPONENT"
    mkdir -p "$COMPONENT_DIR"
    
    # T·∫°o file source & header n·∫øu ch∆∞a c√≥
    if [ ! -f "$COMPONENT_DIR/$COMPONENT.c" ]; then
        cat <<EOF > "$COMPONENT_DIR/$COMPONENT.c"
#include "$COMPONENT.h"
#include "esp_log.h"

static const char *TAG = "$COMPONENT";

void ${COMPONENT}_init(void) {
    ESP_LOGI(TAG, "$COMPONENT initialized");
}
EOF
    fi

    if [ ! -f "$COMPONENT_DIR/$COMPONENT.h" ]; then
        cat <<EOF > "$COMPONENT_DIR/$COMPONENT.h"
#pragma once
void ${COMPONENT}_init(void);
EOF
    fi

    # CMakeLists.txt cho component
    if [ ! -f "$COMPONENT_DIR/CMakeLists.txt" ]; then
        cat <<EOF > "$COMPONENT_DIR/CMakeLists.txt"
idf_component_register(SRCS "$COMPONENT.c"
                       INCLUDE_DIRS ".")
EOF
    fi

    echo "‚úÖ Component $COMPONENT ƒë√£ ƒë∆∞·ª£c t·∫°o"
done

# T·∫°o CMakeLists.txt ch√≠nh n·∫øu ch∆∞a c√≥
if [ ! -f "$PROJECT_DIR/CMakeLists.txt" ]; then
    cat <<EOF > "$PROJECT_DIR/CMakeLists.txt"
cmake_minimum_required(VERSION 3.16)
include(\$ENV{IDF_PATH}/tools/cmake/project.cmake)
project(mainproject)
EOF
    echo "‚úÖ CMakeLists.txt ƒë√£ ƒë∆∞·ª£c t·∫°o"
fi

# T·∫°o th∆∞ m·ª•c main v√† file main.c n·∫øu ch∆∞a c√≥
mkdir -p "$PROJECT_DIR/main"

if [ ! -f "$PROJECT_DIR/main/main.c" ]; then
    cat <<EOF > "$PROJECT_DIR/main/main.c"
#include <stdio.h>
#include "comm.h"
#include "buzzer.h"
#include "mpu6050.h"
#include "sim4g_gps.h"

void app_main(void) {
    printf("üöÄ ESP32 Fall Alert System Started\n");
    
    comm_init();
    buzzer_init();
    mpu6050_init();
    sim4g_gps_init();
}
EOF
    echo "‚úÖ File main.c ƒë√£ ƒë∆∞·ª£c t·∫°o"
fi

echo "üéâ D·ª± √°n ƒë√£ ƒë∆∞·ª£c thi·∫øt l·∫≠p ho√†n t·∫•t t·∫°i: $PROJECT_DIR"
echo "‚û° H√£y v√†o th∆∞ m·ª•c d·ª± √°n v√† build b·∫±ng: cd $PROJECT_DIR && idf.py build"

